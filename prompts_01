# Codex用：Odoo v16 デフォルト言語・通貨設定モジュール開発指示書

## プロジェクト概要

**目標**: Odoo v16でデフォルト言語を日本語（ja_JP）、デフォルト通貨を日本円（JPY）に設定するカスタムモジュールを開発する

**プロジェクトパス**: `/Users/sasuketorii/Odoo16-0805`
**モジュール名**: `jp_default_settings`
**カテゴリ**: Localization/Japan

---

## 事前リサーチ必須URL

### 公式ドキュメント（必読）
- **Odoo 16.0 公式ドキュメント**: https://www.odoo.com/documentation/16.0/
- **Odoo 16 モジュール開発ガイド**: https://www.odoo.com/documentation/16.0/developer/howtos/backend.html
- **Odoo 16 設定モデル**: https://www.odoo.com/documentation/16.0/developer/reference/addons/orm.html#odoo.addons.base.models.ir_config_parameter
- **Odoo 16 フック関数**: https://www.odoo.com/documentation/16.0/developer/reference/addons/hooks.html

### 参考実装（既存プロジェクト内）
- **Acoona Branding**: `/Users/sasuketorii/Odoo16-0805/addons/acoona_branding/`
- **JP Prefecture**: `/Users/sasuketorii/Odoo16-0805/addons/acoona_jp_prefecture_localization/`

---

## 開発環境確認

### 現在の環境
```bash
# プロジェクトディレクトリに移動
cd /Users/sasuketorii/Odoo16-0805

# Docker環境確認
docker compose ps

# 既存モジュール確認
ls -la addons/
```

### 必要な依存関係
- **Docker**: 既にセットアップ済み
- **Odoo 16**: ポート8069で動作中
- **PostgreSQL**: ポート5432で動作中

---

## モジュール構造作成

### 1. ディレクトリ作成
```bash
mkdir -p addons/jp_default_settings/{models,views,data,security,i18n,static/description}
```

### 2. ファイル構成
```
jp_default_settings/
├── __init__.py
├── __manifest__.py
├── models/
│   ├── __init__.py
│   └── res_config_settings.py
├── data/
│   └── default_data.xml
├── views/
│   └── res_config_settings_views.xml
├── security/
│   └── ir.model.access.csv
├── i18n/
│   └── ja.po
├── hooks.py
└── static/description/
    └── icon.png
```

---

## 実装コード

### 1. `__manifest__.py`
```python
# -*- coding: utf-8 -*-
{
    'name': 'JP Default Settings',
    'version': '16.0.1.0.0',
    'category': 'Localization/Japan',
    'summary': 'デフォルト言語と通貨を日本向けに設定',
    'description': """
JP Default Settings
==================
- デフォルト言語を日本語（ja_JP）に設定
- デフォルト通貨を日本円（JPY）に設定
- 新規ユーザーの初期設定を自動化
    """,
    'author': 'SasukeTorii',
    'company': 'REV-C inc.',
    'maintainer': 'REV-C inc.',
    'website': 'https://company.rev-c.com',
    'depends': ['base_setup', 'account'],
    'data': [
        'security/ir.model.access.csv',
        'data/default_data.xml',
        'views/res_config_settings_views.xml',
    ],
    'post_init_hook': 'post_init_hook',
    'installable': True,
    'application': False,
    'auto_install': False,
    'license': 'LGPL-3',
}
```

### 2. `__init__.py`
```python
# -*- coding: utf-8 -*-
from . import models
```

### 3. `models/__init__.py`
```python
# -*- coding: utf-8 -*-
from . import res_config_settings
```

### 4. `models/res_config_settings.py`
```python
# -*- coding: utf-8 -*-
from odoo import fields, models, api, _
from odoo.exceptions import UserError, ValidationError


class ResConfigSettings(models.TransientModel):
    _inherit = 'res.config.settings'

    # デフォルト言語設定
    default_lang = fields.Selection(
        selection='_get_languages',
        string='デフォルト言語',
        config_parameter='web.default_lang',
        default='ja_JP',
        help='新規ユーザーのデフォルト言語を設定します'
    )
    
    # デフォルト通貨設定
    default_currency_id = fields.Many2one(
        'res.currency',
        string='デフォルト通貨',
        config_parameter='base.default_currency_id',
        default=lambda self: self.env.ref('base.JPY', raise_if_not_found=False),
        help='会社のデフォルト通貨を設定します'
    )

    @api.model
    def _get_languages(self):
        """利用可能な言語のリストを取得"""
        return self.env['res.lang'].get_available()

    @api.model
    def get_values(self):
        """設定値を取得"""
        res = super(ResConfigSettings, self).get_values()
        
        # デフォルト言語の取得
        default_lang = self.env['ir.config_parameter'].sudo().get_param('web.default_lang', 'ja_JP')
        res.update(
            default_lang=default_lang,
        )
        
        # デフォルト通貨の取得
        default_currency_id = self.env['ir.config_parameter'].sudo().get_param('base.default_currency_id')
        if default_currency_id:
            res.update(
                default_currency_id=int(default_currency_id),
            )
        
        return res

    def set_values(self):
        """設定値を保存"""
        super(ResConfigSettings, self).set_values()
        
        # デフォルト言語の設定
        self.env['ir.config_parameter'].sudo().set_param('web.default_lang', self.default_lang)
        
        # デフォルト通貨の設定
        if self.default_currency_id:
            self.env['ir.config_parameter'].sudo().set_param('base.default_currency_id', self.default_currency_id.id)
            
            # 既存の会社の通貨も更新
            companies = self.env['res.company'].search([])
            companies.write({'currency_id': self.default_currency_id.id})
```

### 5. `hooks.py`
```python
# -*- coding: utf-8 -*-
from odoo import api, SUPERUSER_ID
import logging

_logger = logging.getLogger(__name__)


def post_init_hook(cr, registry):
    """
    インストール後に実行されるフック
    デフォルト言語と通貨を設定
    """
    env = api.Environment(cr, SUPERUSER_ID, {})
    
    try:
        # 日本語言語を有効化
        japanese_lang = env['res.lang'].search([('code', '=', 'ja_JP')], limit=1)
        if japanese_lang:
            japanese_lang.active = True
            _logger.info('Japanese language activated')
        else:
            _logger.warning('Japanese language not found')
        
        # 日本円通貨を有効化
        jpy_currency = env.ref('base.JPY', raise_if_not_found=False)
        if jpy_currency:
            jpy_currency.active = True
            _logger.info('JPY currency activated')
        else:
            _logger.warning('JPY currency not found')
        
        # デフォルト言語を日本語に設定
        env['ir.config_parameter'].sudo().set_param('web.default_lang', 'ja_JP')
        
        # デフォルト通貨を日本円に設定
        if jpy_currency:
            env['ir.config_parameter'].sudo().set_param('base.default_currency_id', jpy_currency.id)
            
            # 既存の会社の通貨を更新
            companies = env['res.company'].search([])
            companies.write({'currency_id': jpy_currency.id})
            _logger.info(f'Updated {len(companies)} companies to JPY currency')
        
        # 既存ユーザーのデフォルト言語を更新（管理者のみ）
        admin_users = env['res.users'].search([('groups_id', 'in', env.ref('base.group_system').id)])
        admin_users.write({'lang': 'ja_JP'})
        _logger.info(f'Updated {len(admin_users)} admin users to Japanese language')
        
        cr.commit()
        _logger.info('JP Default Settings post_init_hook completed successfully')
        
    except Exception as e:
        _logger.error(f'Error in post_init_hook: {e}')
        cr.rollback()
        raise
```

### 6. `data/default_data.xml`
```xml
<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <!-- 日本語言語を有効化 -->
    <record id="base.lang_ja" model="res.lang">
        <field name="active">True</field>
    </record>
    
    <!-- 日本円通貨を有効化 -->
    <record id="base.JPY" model="res.currency">
        <field name="active">True</field>
    </record>
    
    <!-- デフォルト言語設定 -->
    <record id="default_lang_parameter" model="ir.config_parameter">
        <field name="key">web.default_lang</field>
        <field name="value">ja_JP</field>
    </record>
    
    <!-- デフォルト通貨設定 -->
    <record id="default_currency_parameter" model="ir.config_parameter">
        <field name="key">base.default_currency_id</field>
        <field name="value" eval="ref('base.JPY')"/>
    </record>
</odoo>
```

### 7. `views/res_config_settings_views.xml`
```xml
<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <!-- 一般設定ビューの継承 -->
    <record id="view_general_configuration_jp_default" model="ir.ui.view">
        <field name="name">res.config.settings.jp.default</field>
        <field name="model">res.config.settings</field>
        <field name="inherit_id" ref="base_setup.res_config_settings_view_form"/>
        <field name="arch" type="xml">
            <!-- 日本設定セクションを追加 -->
            <xpath expr="//div[@id='general']" position="inside">
                <div class="col-12 col-lg-6 o_setting_box" id="jp_default_settings_box">
                    <div class="o_setting_left_pane">
                        <i class="fa fa-flag-o" role="img" aria-label="Japanese settings" title="Japanese settings"/>
                    </div>
                    <div class="o_setting_right_pane">
                        <label for="default_lang"/>
                        <div class="text-muted">
                            新規ユーザーのデフォルト言語と会社のデフォルト通貨を設定します
                        </div>
                        <div class="content-group">
                            <div class="mt16 o_settings_container">
                                <div class="o_setting_box">
                                    <div class="o_setting_left_pane">
                                        <label for="default_lang"/>
                                    </div>
                                    <div class="o_setting_right_pane">
                                        <field name="default_lang" class="o_light_label"/>
                                    </div>
                                </div>
                                <div class="o_setting_box">
                                    <div class="o_setting_left_pane">
                                        <label for="default_currency_id"/>
                                    </div>
                                    <div class="o_setting_right_pane">
                                        <field name="default_currency_id" class="o_light_label"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </xpath>
        </field>
    </record>
</odoo>
```

### 8. `security/ir.model.access.csv`
```csv
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_res_config_settings_jp_default,access_res_config_settings_jp_default,base.model_res_config_settings,base.group_system,1,1,1,1
```

### 9. `i18n/ja.po`
```po
# Japanese translations for JP Default Settings module
# Copyright (C) 2024 REV-C inc.
# This file is distributed under the same license as the JP Default Settings module.
msgid ""
msgstr ""
"Project-Id-Version: JP Default Settings 16.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-01 12:00+0000\n"
"PO-Revision-Date: 2024-01-01 12:00+0000\n"
"Last-Translator: SasukeTorii <sasuke@rev-c.com>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. module: jp_default_settings
#: model:res.config.settings,default_lang:jp_default_settings.field_res_config_settings__default_lang
msgid "デフォルト言語"
msgstr "デフォルト言語"

#. module: jp_default_settings
#: model:res.config.settings,default_currency_id:jp_default_settings.field_res_config_settings__default_currency_id
msgid "デフォルト通貨"
msgstr "デフォルト通貨"
```

---

## インストール・テスト手順

### 1. モジュールインストール
```bash
cd /Users/sasuketorii/Odoo16-0805
docker compose exec odoo odoo -c /etc/odoo/odoo.conf -i jp_default_settings --stop-after-init
```

### 2. モジュール更新
```bash
docker compose exec odoo odoo -c /etc/odoo/odoo.conf -u jp_default_settings --stop-after-init
```

### 3. 動作確認
```bash
# ログ確認
docker compose logs -f odoo

# ブラウザでアクセス
open http://localhost:8069
```

---

## 注意事項・検証ポイント

### 1. 情報の正確性確認
- **Odoo 16.0 API**: 上記URLで最新のAPI仕様を確認
- **既存実装**: `acoona_branding`モジュールの実装パターンを参考
- **テスト環境**: 必ずテスト環境で動作確認してから本番適用

### 2. よくある問題と解決策
- **言語が有効化されない**: `res.lang`テーブルの`active`フィールドを確認
- **通貨が設定されない**: `base.JPY`の参照が正しいか確認
- **設定が反映されない**: `ir.config_parameter`の値が正しく保存されているか確認

### 3. ログ確認方法
```bash
# エラーログの確認
docker compose logs odoo | grep -i error

# モジュールインストールログの確認
docker compose logs odoo | grep -i "jp_default_settings"
```

### 4. トラブルシューティング
- **モジュールが表示されない**: `__manifest__.py`の構文エラーを確認
- **インストールエラー**: 依存関係（`base_setup`, `account`）がインストール済みか確認
- **設定画面が表示されない**: ビューの継承IDが正しいか確認

---

## 参考リソース

### 公式ドキュメント
- [Odoo 16 開発者ガイド](https://www.odoo.com/documentation/16.0/developer/)
- [Odoo 16 モデル開発](https://www.odoo.com/documentation/16.0/developer/reference/orm.html)
- [Odoo 16 ビュー開発](https://www.odoo.com/documentation/16.0/developer/reference/views.html)

### コミュニティリソース
- [Odoo Community Association](https://odoo-community.org/)
- [Odoo GitHub](https://github.com/odoo/odoo)

---

## 完了チェックリスト

- [ ] モジュールディレクトリ作成
- [ ] 全ファイル作成・実装
- [ ] モジュールインストール
- [ ] 設定画面での動作確認
- [ ] デフォルト言語設定確認
- [ ] デフォルト通貨設定確認
- [ ] 新規ユーザーでの動作確認
- [ ] ログエラー確認
- [ ] テスト環境での検証完了
